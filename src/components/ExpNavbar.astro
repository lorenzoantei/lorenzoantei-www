---
import { SITE_TITLE } from "../consts";
const { activePage = '' } = Astro.props;

import { getCollection } from 'astro:content';

// Recupera tutti i exp ordinati per data
const exps = (await getCollection('blog'))
  .filter((exp) => exp.data.published === true)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

// Ottieni anni unici
const years = [...new Set(exps.map((p) => new Date(p.data.pubDate).getFullYear()))].sort((a, b) => b - a);

---

<div class="bg-white w-screen fixed top-0 z-[99] shadow-lg shadow-white md:px-6 lg:px-32">
  <navbar class="w-full ">
    
    <!-- TITLE -->
    <div class="p-4 flex items-start font-pixelify">
      <a
        id="site-title"
        class="z-[999] text-black text-3xl transition-colors duration-300 ease-in-out hover:animate-pulse hover:text-pink-500 pr-4 pl-2 py-2"
        href="/"
      >
        {SITE_TITLE}
      </a>
    </div>

    <!-- MENU (inizialmente nascosto) -->
    <div
      id="menu"
      class="overflow-hidden max-h-0 opacity-0 flex flex-col md:flex-row md:space-x-4 space-y-2 md:space-y-0 px-6 transition-all duration-500 ease-in-out"
    >
      <a
        class={activePage == 'exps'
          ? 'hidden'
          : 'opacity-0 translate-y-2 transition-all duration-500 ease-in-out delay-150 text-black hover:text-pink-500 hover:underline text-xl'
        }
        href="/exps"
      >
        exps
      </a>

      <a
        class="opacity-0 translate-y-2 transition-all duration-500 ease-in-out delay-300 text-black hover:text-pink-500 hover:underline text-xl"
        href="/"
      >
        about
      </a>
    </div>



    <h2 class="text-3xl text-black py-3 pl-1 pr-3 md:p-3 inline-block animate-bg-rotate animate-pulse">
      Experiences
    </h2>
    <!-- Pulsanti Anni -->
    <div class="mb-6 flex gap-2 flex-wrap pb-12">
      {years.map((year) => (
        <button 
          data-year={year} 
          class="filter-btn pl-1 pr-1 md:px-3 py-1 hover:bg-black hover:text-cyan-500 transition-colors duration-300 cursor-pointer text-2xl"
        >
          {year}
        </button>
      ))}
    </div>

  </navbar>
</div>

<!-- Script scroll -->
<script>
  const menu = document.getElementById("menu");
  const menuLinks = menu.querySelectorAll("a");
  const title = document.getElementById("site-title");

  let lastScrollY = window.scrollY;
  let hideTimeout;

  function showMenu() {
    menu.classList.remove("max-h-0", "opacity-0");
    menu.classList.add("max-h-40", "opacity-100");

    menuLinks.forEach((link, i) => {
      setTimeout(() => {
        link.classList.remove("opacity-0", "translate-y-2");
        link.classList.add("opacity-100", "translate-y-0");
      }, i * 150);
    });
  }

  function hideMenu() {
    menu.classList.remove("max-h-40", "opacity-100");
    menu.classList.add("max-h-0", "opacity-0");

    menuLinks.forEach((link) => {
      link.classList.add("opacity-0", "translate-y-2");
      link.classList.remove("opacity-100", "translate-y-0");
    });
  }

  function handleScroll() {
    clearTimeout(hideTimeout);

    if (window.scrollY === 0) {
      // In cima: menu sempre visibile, niente auto-hide
      showMenu();
      return;
    }

    if (window.scrollY > lastScrollY) {
      // Scroll verso il basso
      hideMenu();
    } else {
      // Scroll verso lâ€™alto
      showMenu();

      // Nascondo di nuovo dopo 3s
      hideTimeout = setTimeout(() => {
        hideMenu();
      }, 3000);
    }

    // Effetto quadrato nero sul title
    if (window.scrollY > 50) {
      title.classList.add("bg-black", "text-white", "shadow-md");
    } else {
      title.classList.remove("bg-black", "text-white", "shadow-md");
    }

    lastScrollY = window.scrollY;
  }

  window.addEventListener("scroll", handleScroll);

  // Mostra menu subito se sei in cima quando carica la pagina
  if (window.scrollY === 0) {
    showMenu();
  }
</script>
