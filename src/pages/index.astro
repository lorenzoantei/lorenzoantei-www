---
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";

import { getCollection } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";

import HydraFrame from "../components/HydraFrame.astro";

const allExps = (await getCollection('exps'))
  .sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime())
  .slice(0, 5);

---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <main>
      <style>
        .blink-cursor {
          animation: pulse 1s cubic-bezier(0.4, 0, 0.6, 1) infinite;
        }

        @keyframes pulse {
          0%,
          100% {
            opacity: 1;
          }
          50% {
            opacity: 0;
          }
        }

        .glitchy {
          display: inline-block;
          animation: glitch 0.4s steps(2, end) infinite;
          color: var(--glitch-color, #0f0);
        }

        .delay-1 {
          animation-delay: 0s;
        }

        .delay-2 {
          animation-delay: 0.23s;
        }

        @keyframes glitch {
          0% {
            transform: translate(0);
            opacity: 1;
          }
          20% {
            transform: translate(-1px, 1px);
            opacity: 0.8;
          }
          40% {
            transform: translate(1px, -2px);
            opacity: 0.6;
          }
          60% {
            transform: translate(-2px, 2px);
            opacity: 0.9;
          }
          80% {
            transform: translate(2px, -1px);
            opacity: 0.7;
          }
          100% {
            transform: translate(0);
            opacity: 1;
          }
        }
      </style>

      <script>
        // JS da inserire in pagina o componente
        const glitchElements = document.querySelectorAll(".glitchy");

        function getRandomColor() {
          // Genera colore HEX casuale
          return (
            "#" +
            Math.floor(Math.random() * 16777215)
              .toString(16)
              .padStart(6, "0")
          );
        }

        glitchElements.forEach((el) => {
          el.addEventListener("animationiteration", () => {
            el.style.setProperty("--glitch-color", getRandomColor());
          });
        });
      </script>

      <section class="mx-3 md:mx-24">
        <div class="my-24 md:my-12 2xl:my-24 h-auto text-7xl 2xl:text-4xl">
          <h2 class="2xl:text-[100px] font-bold">hello,</h2>

          <h1
            class="font-bold flex flex-col 2xl:flex-row text-7xl 2xl:text-[90px]"
          >
            <span class="pt-6 2xl:pt-0">I'm</span>

            <div class="hidden 2xl:block w-4"></div>

            <div
              class="flex flex-col 2xl:flex-row pt-3 2xl:pt-0 items-start 2xl:items-center"
            >
              <span class="border-b-4 border-black pb-1">Lorenzo</span>

              <div class="hidden 2xl:block w-4 h-full border-b-4"></div>

              <div class="pt-6 2xl:pt-0 flex items-center space-x-2">
                <span class="border-b-4 border-black pb-1">Antei</span>
                <span class="inline-block blink-cursor text-black/30">|</span>
              </div>
            </div>
          </h1>
        </div>

        <div class="h-auto md:max-w-1/2">
          <div id="bio-container" class="text-2xl my-12 md:my-32">
            <div id="bio-short">
              <p>
                I'm a computer artist. I do bizarre live coding sessions with
                highly questionable Arduino-based contraptions, and moonlight as
                full stack web dev and video editor when I'm not frying
                microcontrollers.
              </p>
              <button
                class="pl-1 mt-6 pr-8 pt-8 pb-1 bg-black animate-pulse bg-opacity-50 text-white opacity-100 duration-3000 pointer-events-auto cursor-pointer"
                onclick="toggleText()"
              >
                More...
              </button>
            </div>

            <div
              id="bio-full"
              class="hidden space-y-6 opacity-0 transition-opacity duration-1000 pt-32"
            >
              <p>
                I am an Italian artist and software engineer; I explore code
                across networks and realities, moving between digital art and
                creative programming.
              </p>
              <p>
                My creative spark first lit up into empty spaces during
                university. Digital photograpy became my way to slow down time —
                to walk barefoot through reality, notice its cracks, its
                reflections, its fleeting glances. It grounded me while also
                opening portals. That tactile relationship with the world
                sparked a need to go deeper. I carried that curiosity with me
                into the academy, where it found room to grow.
              </p>
              <p>
                , graduated in Net Art and Digital Cultures from the Accademia
                di Belle Arti di Carrara with the thesis <i
                  >Catturare l'effimero - L’archivio come azione artivista -
                  verso un’estetica dell’effimero</i
                > (2025).
              </p>

              <p>
                I’ve taken part in numerous exhibitions, both in physical spaces
                and across the ether, pursuing a research path that blends
                irony, hacking, and critical intervention. I’ve created
                animatronics for theatrical performances, joined live coding
                nights with highly questionable Arduino-based hardware, and
                developed audiovisual experiences on the edge between
                performance and crash.
              </p>

              <p>
                Alongside my practice, I collaborate with international entities
                such as Songlines Production, Omava Production and Lucca Crea
                (Lucca Comics & Games), handling media management and video
                editing for various projects... By day, I work as a full stack
                web developer at Quivi, building custom web applications.
              </p>

              <p>
                I approach life as a constant flow, where the only certainty is
                the process of creating, evolving, and breaking things down to
                rebuild them again.
                <span class="glitchy delay-1">Again.</span>
                <span class="glitchy delay-2">And again.</span>
              </p>

              <!-- <section
                class="bg-gray-100 p-2 rounded-lg md:mx-0 mx-2 md:max-w-200 my-12"
              >
                <pre
                  class="bg-gray-900 text-green-400 font-mono text-sm leading-relaxed p-4 rounded overflow-x-auto whitespace-pre-wrap break-words">
                  {`int main() {
                    LifeLoop loop;
                    std::cout << "The loop is everything; everything is the loop." << std::endl;
                    loop.run();
                    return 0;
                  }`}
                </pre>
              </section> -->
            </div>
          </div>
        </div>
      </section>

      <HydraFrame
        src="https://hydra.ojack.xyz/?code=b3NjKDElMkMlMjAwLjUlMkMlMjAwLjAwMSklMEElMjAlMjAlMjAlMjAua2FsZWlkKCU1QjMlMkM0JTJDNSUyQzclMkM4JTJDOSUyQzEwJTVELmZhc3QoMC4wMSkpJTBBJTIwJTIwJTIwJTIwLmNvbG9yKDAuNyUyQyUyMDAuMyklMEElMjAlMjAlMjAlMjAuY29sb3JhbWEoLjEpJTBBJTIwJTIwLmRpZmYoZ3JhZGllbnQoLjMpKSUwQSUyMCUyMC5hZGQoc2hhcGUoMiUyQzIpLmJsZW5kKGdyYWRpZW50KDEpKSklMEElMjAlMjAubW9kdWxhdGUobm9pc2UoKSklMEElMjAlMjAlMjAlMjAucm90YXRlKDIlMkMoKSUzRCUzRU1hdGguc2luKHRpbWUpKiUyMC0wLjAwMDElMjApJTBBJTIwJTIwJTIwJTIwLm1vZHVsYXRlUm90YXRlKG8wJTJDKCklM0QlM0VNYXRoLnNpbih0aW1lKSUyMColMjAwLjAwMDEpJTBBJTIwJTIwJTIwJTIwLm1vZHVsYXRlKG8wJTJDJTIwMC45KSUwQSUyMCUyMCUyMCUyMC5zY2FsZSguNSklMEElMjAlMjAlMjAlMjAub3V0KG8wKQ%3D%3D"
        title="cubotic waves"
      />

      <section class="text-white min-h-screen">
        <div class="p-3 md:p-24 bg-black pb-12">
          
          <h3 class="mb-8">
            <span class="text-3xl bg-white p-3 text-black inline-block"
              >Latest experiences</span
            >
          </h3>


            <div class="">
              <div class="py-3">[</div>
              {allExps.map((exp, index) => (
                  <div class="">
                  <a href={`/exps/${exp.id}`}>
                    <div class="px-2 text-xl py-4 ml-6 hover:bg-pink-500 rounded-tr-lg rounded-br-lg animate ease-in-out duration-500">
                      <div class="pl-2">{'{'}</div>
                      <div class="pl-4">"title": "{exp.data.title}",</div>
                      <div class="pl-4">"date": "<FormattedDate date={exp.data.pubDate} />",</div>
                      <div class="pl-2">{'}'}{index < allExps.length - 1 ? ',' : ''}</div>
                    </div>
                  </a>
              </div>
                ))}
              <div class="py-3">]</div>
            </div>

            <div class="py-12">

            <a
            class="pl-1 mt-6 pr-8 pt-8 pb-1 bg-pink-500 animate-pulse bg-opacity-50 text-white opacity-100 duration-3000 pointer-events-auto cursor-pointer"
            href="/exps"
          >
            More...
          </a>
        </div>
          </div>
      </section>

      

      <script is:inline>
        function toggleText() {
          const short = document.getElementById("bio-short");
          const full = document.getElementById("bio-full");
          const bioContainer = document.getElementById("bio-container");

          if (short.classList.contains("hidden")) {
            // Mostra short, nasconde full
            short.classList.remove("hidden");
            full.classList.add("opacity-0"); // nasconde gradualmente
            setTimeout(() => {
              full.classList.add("hidden");
            }, 500); // dopo il fade-out
          } else {
            // Nasconde short, mostra full con fade-in
            short.classList.add("hidden");
            full.classList.remove("hidden"); // rimuove hidden subito
            setTimeout(() => {
              full.classList.remove("opacity-0"); // poi fade-in
            }, 10); // piccolo delay per forzare il reflow
          }

          if (bioContainer) {
            bioContainer.scrollIntoView({ behavior: "smooth", block: "start" });
          }
        }
      </script>
    </main>
    <Footer />
  </body>
</html>
