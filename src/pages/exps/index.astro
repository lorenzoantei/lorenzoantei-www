---

import ExpsLayout from '../../layouts/ExpsLayout.astro';

import { getCollection } from 'astro:content';
import BaseHead from '../../components/BaseHead.astro';
import FormattedDate from '../../components/FormattedDate.astro';

import { SITE_DESCRIPTION, SITE_TITLE } from '../../consts';

// Recupera tutti i post ordinati per data
const posts = (await getCollection('blog')).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

// Ottieni anni unici
const years = [...new Set(posts.map((p) => new Date(p.data.pubDate).getFullYear()))].sort((a, b) => b - a);

const activePage='exps';

import Footer from '../../components/Footer.astro';
const mode='exps';

---

<ExpsLayout {activePage} {mode}>

	<main class="min-h-screen pt-42 md:pt-32 mx-2 lg:mx-28">
    <section class="md:p-6">
      <h2 class="text-3xl bg-green-500 py-3 pl-1 pr-3 md:p-3 text-black inline-block">
        Experiences
      </h2>
      <!-- Pulsanti Anni -->
      <div class="mb-6 flex gap-2 flex-wrap pb-12">
        {years.map((year) => (
          <button 
            data-year={year} 
            class="filter-btn pl-1 pr-1 md:px-3 py-1 hover:bg-black hover:text-cyan-500 transition-colors duration-300 cursor-pointer text-2xl"
          >
            {year}
          </button>
        ))}
      </div>
      
      <div class="flex justify-start #text-[150px] #-mb-32 #-mt-32 #ml-12 py-2">
        <p class="#rotate-90 origin-center inline-block text-4xl text-gray-500">
          [
        </p>
      </div>
      <!-- Lista Esperienze -->
      <ul id="posts-list" class="grid gap-6">
        {posts.map((post, index) => {
          const year = new Date(post.data.pubDate).getFullYear();
      
          // Logica colori e trasformazioni casuali
          const bgColors = [
            "hover:bg-pink-500",
            "hover:bg-blue-500",
            "hover:bg-green-500",
            "hover:bg-yellow-400",
            "hover:bg-purple-500",
            "hover:bg-rose-400",
            "hover:bg-cyan-400",
          ];
      
          // Fisherâ€“Yates shuffle
          function shuffleArray(array) {
            const arr = [...array];
            for (let i = arr.length - 1; i > 0; i--) {
              const j = Math.floor(Math.random() * (i + 1));
              [arr[i], arr[j]] = [arr[j], arr[i]];
            }
            return arr;
          }
      
          const shuffledColors = shuffleArray(bgColors);
          let colorIndex = 0;
          const getNextColor = () => {
            const color = shuffledColors[colorIndex];
            colorIndex = (colorIndex + 1) % shuffledColors.length;
            return color;
          };
      
          const getRandomTransform = () => {
            const tx = Math.floor(Math.random() * 5) - 2;
            const ty = Math.floor(Math.random() * 5) - 2;
            const rot = Math.floor(Math.random() * 5) - 2;
            return `translate-x-[${tx}px] translate-y-[${ty}px] rotate-[${rot}deg]`;
          };
      
          const colorClass = getNextColor();
          const transformClass = getRandomTransform();
      
          return (
            <li data-year={year} class="post-item hover:animate-pulse duration-3000 text-gray-500 md:border-0 border-1 border-light-blue-500 border-opacity-25">
              <a href={`/exps/${post.id}/`}>
                <div
                  class={`group px-2 text-xl py-4 ml-6 rounded-tr-lg rounded-br-lg transition-all duration-500 ease-in-out hover:scale-[1.08] hover:hover-weird-blip ${colorClass} ${transformClass}`}
                >
                  <div class="pl-2">{"{"}</div>
                  <div class=" pl-4 text-2xl md:text-2xl lg::text-5xl text-black!important">"title": "<span class="text-black">{post.data.title}</span>",</div>
                  <div class="pl-4">
                    "date": "<FormattedDate date={post.data.pubDate} />",
                  </div>
                  <div class="pl-2">
                    {"}"}
                    {index < posts.length - 1 ? "," : ""}
                  </div>
                </div>
              </a>
            </li>
          );
        })}
      </ul>
      <div class="flex justify-start #text-[150px] #-mb-32 #-mt-32 #ml-12 py-2">
        <p class="#rotate-90 origin-center inline-block text-4xl text-gray-500">
          ]
        </p>
      </div>
      
    </section>
  </main>
  
  <div class="bg-white mt-24">
    <Footer mode="exps" />
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
    const buttons = document.querySelectorAll(".filter-btn");
    const posts = document.querySelectorAll(".post-item");

    buttons.forEach((btn) => {
      btn.addEventListener("click", () => {
        const year = btn.getAttribute("data-year");

        // Rimuove la classe active da tutti i pulsanti
        buttons.forEach(b => b.classList.remove("bg-black", "text-orange-500"));

        // Aggiunge classe active al pulsante cliccato
        btn.classList.add("bg-black", "text-orange-500");

        // Filtra i post
        posts.forEach((post) => {
          if (year === "all" || post.getAttribute("data-year") === year) {
            post.style.display = "";
          } else {
            post.style.display = "none";
          }
        });
      });
    });
  });

  </script>
  
</ExpsLayout>
