---
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";

import { getCollection } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";

const allExps = (await getCollection("exps")).sort(
  (a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime()
);
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <main>
      <style>
        .blink-cursor {
          animation: pulse 1s cubic-bezier(0.4, 0, 0.6, 1) infinite;
        }

        @keyframes pulse {
          0%,
          100% {
            opacity: 1;
          }
          50% {
            opacity: 0;
          }
        }

        .glitchy {
          display: inline-block;
          animation: glitch 0.4s steps(2, end) infinite;
          color: var(--glitch-color, #0f0);
        }

        .delay-1 {
          animation-delay: 0s;
        }

        .delay-2 {
          animation-delay: 0.23s;
        }

        @keyframes glitch {
          0% {
            transform: translate(0);
            opacity: 1;
          }
          20% {
            transform: translate(-1px, 1px);
            opacity: 0.8;
          }
          40% {
            transform: translate(1px, -2px);
            opacity: 0.6;
          }
          60% {
            transform: translate(-2px, 2px);
            opacity: 0.9;
          }
          80% {
            transform: translate(2px, -1px);
            opacity: 0.7;
          }
          100% {
            transform: translate(0);
            opacity: 1;
          }
        }
      </style>

      <script>
        // JS da inserire in pagina o componente
        const glitchElements = document.querySelectorAll(".glitchy");

        function getRandomColor() {
          // Genera colore HEX casuale
          return (
            "#" +
            Math.floor(Math.random() * 16777215)
              .toString(16)
              .padStart(6, "0")
          );
        }

        glitchElements.forEach((el) => {
          el.addEventListener("animationiteration", () => {
            el.style.setProperty("--glitch-color", getRandomColor());
          });
        });
      </script>

      <section class="mx-3 md:mx-24">
        <div class="my-24 md:my-12 2xl:my-24 h-auto text-7xl 2xl:text-4xl">
          <h2 class="2xl:text-[100px] font-bold">hello,</h2>

          <h1
            class="font-bold flex flex-col 2xl:flex-row text-7xl 2xl:text-[90px]"
          >
            <span class="pt-6 2xl:pt-0">I'm</span>

            <div class="hidden 2xl:block w-4"></div>

            <div
              class="flex flex-col 2xl:flex-row pt-3 2xl:pt-0 items-start 2xl:items-center"
            >
              <span class="border-b-4 border-black pb-1">Lorenzo</span>

              <div class="hidden 2xl:block w-4 h-full border-b-4"></div>

              <div class="pt-6 2xl:pt-0 flex items-center space-x-2">
                <span class="border-b-4 border-black pb-1">Antei</span>
                <span class="inline-block blink-cursor text-black/30">|</span>
              </div>
            </div>
          </h1>
        </div>
      </section>

      <section class="text-white min-h-screen">
        <div class="p-3 md:p-24 bg-black pb-12">
          <h3 class="mb-8">
            <span class="text-3xl bg-white p-3 text-black inline-block"
              >Experiences</span
            >
          </h3>

          <div class="">
            <div class="py-3">[</div>
            {
              allExps.map((exp, index) => (
                <div class="">
                  <a href={`/exps/${exp.id}`}>
                    <div class="px-2 text-xl py-4 ml-6 hover:bg-orange-500 rounded-tr-lg rounded-br-lg animate ease-in-out duration-500">
                      <div class="pl-2">{"{"}</div>
                      <div class="pl-4">"title": "{exp.data.title}",</div>
                      <div class="pl-4">
                        "date": "<FormattedDate date={exp.data.pubDate} />
                        ",
                      </div>
                      <div class="pl-2">
                        {"}"}
                        {index < allExps.length - 1 ? "," : ""}
                      </div>
                    </div>
                  </a>
                </div>
              ))
            }
            <div class="py-3">]</div>
          </div>
        </div>
      </section>

      <script is:inline>
        function toggleText() {
          const short = document.getElementById("bio-short");
          const full = document.getElementById("bio-full");
          const bioContainer = document.getElementById("bio-container");

          if (short.classList.contains("hidden")) {
            // Mostra short, nasconde full
            short.classList.remove("hidden");
            full.classList.add("opacity-0"); // nasconde gradualmente
            setTimeout(() => {
              full.classList.add("hidden");
            }, 500); // dopo il fade-out
          } else {
            // Nasconde short, mostra full con fade-in
            short.classList.add("hidden");
            full.classList.remove("hidden"); // rimuove hidden subito
            setTimeout(() => {
              full.classList.remove("opacity-0"); // poi fade-in
            }, 10); // piccolo delay per forzare il reflow
          }

          if (bioContainer) {
            bioContainer.scrollIntoView({ behavior: "smooth", block: "start" });
          }
        }
      </script>
    </main>
    <Footer />
  </body>
</html>
